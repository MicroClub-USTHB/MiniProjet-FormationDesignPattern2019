import java.util.Map;
import java.util.Stack;

public class Table_Verite {
    private boolean[] tmp;
    public Map<boolean[],Boolean> Dico;

    public Table_Verite(int n){//n = nombre de variable
        this.tmp =new boolean[n];
    }

    private int[] Bin(int n,int m){
        int[] T= new int [m] ;
        int i =n; int j= m;
        while ((i / 2)!=0) {T[j]=i%2; j--; i=i/2; } //on remplie de droite a gauche
        while(j>0){T[i]=0; j--;} //on rajoute des zero a gauche
        return(T);}

     private Stack StackHandler(Stack P,String str){  // A COMPLETER
        return(P);
     }

     public void TV(int n,String Expression){
        int i,j,m; int[] T= new int[n];
         double p= Math.pow(2,n); m=(int)p; // m = nombre de ligne de la TV
         Stack P= new Stack();
       for(i=1;i<=m;i++){
           T=this.Bin(i-1,m); // T contient la combinaison en binaire
           for(j=1;j<=n;j++){
               if(T[j]!=0){this.tmp[j]=true;} // 1 = true
                 else {this.tmp[j]=false;} //0 = false
                 P.push(tmp[j]);    }
       P=this.StackHandler(P,Expression);
           Boolean bool=(Boolean)P.peek();
       this.Dico.put(tmp,bool);}
     }
}